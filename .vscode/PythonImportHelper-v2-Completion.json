[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "importPath": "main.views",
        "description": "main.views",
        "isExtraImport": true,
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "main.views",
        "description": "main.views",
        "isExtraImport": true,
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "exc",
        "importPath": "main.views",
        "description": "main.views",
        "isExtraImport": true,
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "django_heroku",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_heroku",
        "description": "django_heroku",
        "detail": "django_heroku",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "manage",
        "description": "manage",
        "isExtraImport": true,
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "MainConfig",
        "kind": 6,
        "importPath": "main.apps",
        "description": "main.apps",
        "peekOfCode": "class MainConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'main'",
        "detail": "main.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "main.urls",
        "description": "main.urls",
        "peekOfCode": "urlpatterns = [\n    path('', index, name='index'),\n    path('home/', home, name='home'),\n    path('exc/', exc, name='exc'),\n]",
        "detail": "main.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "def index(request):\n    result = None\n    test_str = None\n    if request.method == 'POST':\n        test_str = request.POST.get('test_str')\n        result = len([ele for ele in test_str if ele.isalpha()])\n    context = {\n        'test_str': test_str,\n        'result': result,\n    }",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "def home(request):\n    result = None\n    test_str = None\n    if request.method == 'POST':\n        test_str = request.POST.get('test_str')\n        if test_str:\n            # Split the string by whitespace and filter out empty strings\n            result = len([word for word in test_str.split() if word])\n    context = {\n        'test_str': test_str,",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "get_exchange_rate",
        "kind": 2,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "def get_exchange_rate(currency_from, currency_to):\n    try:\n        response = requests.get(EXCHANGE_API_URL)\n        data = response.json()\n        rates = data.get('rates', {})\n        from_rate = rates.get(currency_from.upper())\n        to_rate = rates.get(currency_to.upper())\n        if from_rate and to_rate:\n            return to_rate / from_rate\n        else:",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "exc",
        "kind": 2,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "def exc(request):\n    context = {}\n    if request.method == 'POST':\n        currency_from = request.POST.get('currency_from', '').lower()\n        currency_to = request.POST.get('currency_to', '').lower()\n        amount = request.POST.get('amount', '').strip()\n        try:\n            amount = float(amount)\n            exchange_rate = get_exchange_rate(currency_from, currency_to)\n            if exchange_rate is not None:",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "kind": 5,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "API_KEY = '8c61a5f549f79b0f525c907c'\nEXCHANGE_API_URL = 'https://api.exchangerate-api.com/v4/latest/USD'\ndef get_exchange_rate(currency_from, currency_to):\n    try:\n        response = requests.get(EXCHANGE_API_URL)\n        data = response.json()\n        rates = data.get('rates', {})\n        from_rate = rates.get(currency_from.upper())\n        to_rate = rates.get(currency_to.upper())\n        if from_rate and to_rate:",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "EXCHANGE_API_URL",
        "kind": 5,
        "importPath": "main.views",
        "description": "main.views",
        "peekOfCode": "EXCHANGE_API_URL = 'https://api.exchangerate-api.com/v4/latest/USD'\ndef get_exchange_rate(currency_from, currency_to):\n    try:\n        response = requests.get(EXCHANGE_API_URL)\n        data = response.json()\n        rates = data.get('rates', {})\n        from_rate = rates.get(currency_from.upper())\n        to_rate = rates.get(currency_to.upper())\n        if from_rate and to_rate:\n            return to_rate / from_rate",
        "detail": "main.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "task.asgi",
        "description": "task.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "task.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'django-insecure-pa^k1eu8tcf343+v8+6tvqe2-dfuew4rcf88mi8_#)#$^vjou('\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-pa^k1eu8tcf343+v8+6tvqe2-dfuew4rcf88mi8_#)#$^vjou('\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main',\n]",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main',\n]\nMIDDLEWARE = [",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'task.urls'",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "ROOT_URLCONF = 'task.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, \"templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, \"templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "WSGI_APPLICATION = 'task.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "USE_TZ = True\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "task.settings",
        "description": "task.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)\ndjango_heroku.settings(locals())",
        "detail": "task.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "task.urls",
        "description": "task.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',include('main.urls')),\n]",
        "detail": "task.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "task.wsgi",
        "description": "task.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "task.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'task.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]